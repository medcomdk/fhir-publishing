name: "FSH-Naming Lint"

on:
  workflow_call:
    inputs:
      WHITELISTED_KEBAB_CASE_WORDS:
        description: Comma-seperated valid words in kebab-case. Defaults to medcom, meaning that 'MedCom' does not need to become med-com in kebab case.
        required: false
        default: 'medcom'
        type: string

jobs:
  lint:
    name: Linting to ensure organization wide readability and homogenization
    runs-on: ubuntu-latest

    steps:
      - name: Checkout IG Source
        uses: actions/checkout@v4
        with:
          path: ig
      
      - name: Setup Node for linting FSH files with Node
        uses: actions/setup-node@v4
      
      - name: Validate FSH linting rules
        shell: bash
        run: |
          result=$(node scripts/validate-fsh.js ./ig/input --whitelist=${{ inputs.WHITELISTED_KEBAB_CASE_WORDS }})
          echo "LINT_RESULT=$result" >> $GITHUB_ENV
          has_problem=0
          case $(printf '%s\n' "$result" | tr '[:upper:]' '[:lower:]') in
            *problems*) has_problem=1 ;;
          esac

          echo "LINT_FAILURE=$has_problem" >> $GITHUB_ENV

      - name: Comment on PR
        uses: actions/github-script@v7
        env:
          LINT_FAILURE: ${{ env.LINT_FAILURE }}
          LINT_RESULT: ${{ env.LINT_RESULT }}
        with:
          script: |
            const titleOfComment = "## Linting Result: ";
            const resultEmoji = process.env.LINT_FAILURE === 0 ? "✅" : "❌";
            const body = titleOfComment + resultEmoji + "\n" + process.env.LINT_RESULT;

            const { owner, repo } = context.repo;
            const prNumber = context.payload.pull_request.number;

            const existing = await github.paginate(
              github.rest.issues.listComments,
              { owner, repo, issue_number: prNumber },
            );

            const ourComment = existing.find(c =>
              c.user.type === 'Bot' &&
              c.body.includes(titleOfComment)
            );

            if (ourComment) {
              await github.rest.issues.updateComment({ owner, repo, comment_id: ourComment.id, body });
            } else {
              await github.rest.issues.createComment({ owner, repo, issue_number: prNumber, body });
            }

      - name: Fail workflow if linting was not succesful
        if: env.LINT_FAILURE == 1
        run: |
          exit 1